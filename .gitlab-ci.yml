image: nexus.engageska-portugal.pt/ska-docker/deploy:latest

before_script:
  - helm init --client-only

stages:
  - lint
  - clean
  - deploy
  - test
  - post_test
  - lifecycle
  - debug

lint:
  stage: lint
  tags:
  - docker-executor
  allow_failure: true
  script:
  - make lint_all

delete test environment:
  stage: clean
  tags:
  - docker-executor
  script:
  - make delete_all KUBE_NAMESPACE=integration
  - kubectl delete namespace integration
  - kubectl delete namespace integration-sdp
  environment:
    name: test
  only:
    refs:
      - master
    variables:
      - $DELETE == "true"

delete staging environment: 
  stage: clean
  retry: 2
  tags:
  - docker-executor
  script:
  - make delete_all KUBE_NAMESPACE=staging HELM_RELEASE=staging
  - kubectl delete namespace staging
  - kubectl delete namespace staging-sdp
  environment:
    name: staging
  only:
    refs:
      - staging
    variables:
      - $DELETE == "true"

deploy test environment:
  stage: deploy
  tags:
  - docker-executor
  script:
  - if [ -n "$HELM_CHART" ]; then make delete KUBE_NAMESPACE=integration; fi;
  - make deploy_all KUBE_NAMESPACE=integration INGRESS_HOST=integration.engageska-portugal.pt
  - kubectl get all,pv,pvc,ingress -n integration
  retry: 2
  environment:
    name: test
    url: http://integration.engageska-portugal.pt/testdb
  only:
    refs:
      - master

deploy staging environment:
  stage: deploy
  retry: 2
  tags:
  - docker-executor
  script:  
  - make deploy_all KUBE_NAMESPACE=staging INGRESS_HOST=kubernetes.engageska-portugal.pt HELM_RELEASE=staging
  - kubectl get all,pv,pvc,ingress -n staging
  environment:
    name: staging
    url: http://kubernetes.engageska-portugal.pt/testdb
  only:
    refs:
      - staging

k8s_test test environment:
  stage: test
  retry: 2
  tags:
  - docker-executor
  script:
  - make k8s_test KUBE_NAMESPACE=integration INGRESS_HOST=integration.engageska-portugal.pt && [ -f "build/report.xml" ]
  environment:
    name: test
    url: http://integration.engageska-portugal.pt/testdb
  only:
    refs:
      - master
  artifacts:
    name: "report.json"
    paths: ['build/report.json']
    reports:
      junit: build/report.xml
  artifacts:
    name: "cucumber.json"
    paths: ['build/cucumber.json']
   

smoketest test environment:
  stage: test
  tags:
  - docker-executor
  script:
  - ./scripts/smoketest.sh
  environment:
    name: test
    url: http://integration.engageska-portugal.pt/testdb
  only:
    refs:
      - master

k8s_test staging environment:
  stage: test
  retry: 2
  tags:
  - docker-executor
  script:  
  - make k8s_test KUBE_NAMESPACE=staging INGRESS_HOST=kubernetes.engageska-portugal.pt HELM_RELEASE=staging && [ -f "build/report.xml" ]
  environment:
    name: staging
    url: http://kubernetes.engageska-portugal.pt/testdb
  only:
    refs:
      - staging
  artifacts:
    name: "report.json"
    paths: ['build/report.json']
    reports:
      junit: build/report.xml

delete-and-deploy test environment:
  stage: lifecycle
  tags:
  - docker-executor
  script:
  - make delete_all KUBE_NAMESPACE=integration
  - kubectl delete namespace integration
  - kubectl delete namespace integration-sdp
  - make deploy_all KUBE_NAMESPACE=integration INGRESS_HOST=integration.engageska-portugal.pt
  environment:
    name: test
    url: http://integration.engageska-portugal.pt/testdb
  when: manual
  only:
    refs:
      - master

delete-and-deploy staging environment: 
  stage: lifecycle
  tags:
  - docker-executor
  script:
  - make delete_all KUBE_NAMESPACE=staging HELM_RELEASE=staging
  - kubectl delete namespace staging
  - kubectl delete namespace staging-sdp
  - make deploy_all KUBE_NAMESPACE=staging INGRESS_HOST=kubernetes.engageska-portugal.pt HELM_RELEASE=staging
  environment:
    name: staging
    url: http://kubernetes.engageska-portugal.pt/testdb
  when: manual
  only:
    refs:
      - staging

run-debug-cmd:
  stage: debug
  variables:
    DEBUG_CMD: echo noop
  tags:
  - docker-executor
  script:
  - /bin/sh -exc "$DEBUG_CMD"
  when: manual
  allow_failure: true

print-debug-info:
  stage: debug
  variables:
    KUBE_NAMESPACE: integration
  tags:
  - docker-executor
  script:
  - kubectl describe ingresses --all-namespaces
  - kubectl describe -n kube-system pod $(kubectl get pod -n kube-system | grep traefik | cut -d\  -f1)
  - kubectl logs --tail=100 -n kube-system  $(kubectl get pod -n kube-system | grep traefik | cut -d\  -f1)
  - make podlogs KUBE_NAMESPACE=$KUBE_NAMESPACE
  - kubectl logs --tail=100 -n $KUBE_NAMESPACE $(kubectl get pod -n $KUBE_NAMESPACE | grep fluentd | head -n 1  | cut -d\  -f1)
  - kubectl get all --all-namespaces
  environment:
    name: test
  when: manual
  allow_failure: true

.xray_report:
  stage: post_test
  tags:
  - docker-executor
  script:
    - 'curl -X POST -H "Content-type: application/json" --fail
         -H "Authorization: Basic $JIRA_AUTH"
         --data @cucumber.json
         htts://jira.skatelescope.org/rest/raven/1.0/import/execution/cucumber'
  when: always
  only: [master]
  retry: 2

