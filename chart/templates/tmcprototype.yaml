{{ if .Values.tmcprototype.enabled }}
---

apiVersion: v1
kind: Pod
metadata:
  name: tmcprototype-{{ template "integration-tmc-webui.name" . }}-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: tmcprototype-{{ template "integration-tmc-webui.name" . }}-{{ .Release.Name }}
    chart: {{ template "integration-tmc-webui.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  volumes:
    - name: logs
      persistentVolumeClaim:
        claimName: rsyslog-{{ template "integration-tmc-webui.name" . }}-{{ .Release.Name }}

  initContainers:
  - name: devices
    image: "{{ .Values.tmcprototype.image.registry }}/{{ .Values.tmcprototype.image.image }}:{{ .Values.tmcprototype.image.tag }}"
    imagePullPolicy: {{ .Values.tmcprototype.image.pullPolicy }}
    command:
          - /usr/local/bin/wait-for-it.sh
          - databaseds-{{ template "integration-tmc-webui.name" . }}-{{ .Release.Name }}:10000
          - --timeout=30
          - --strict
          - --
          - echo "Databaseds ready for use."
    env:
    - name: TANGO_HOST
      value: databaseds-{{ template "integration-tmc-webui.name" . }}-{{ .Release.Name }}:10000

  containers:
  - name: dishmaster1
    image: "{{ .Values.tmcprototype.image.registry }}/{{ .Values.tmcprototype.image.image }}:{{ .Values.tmcprototype.image.tag }}"
    imagePullPolicy: {{ .Values.tmcprototype.image.pullPolicy }}
    volumeMounts:
    - name: logs
      mountPath: /logs
    command:
      - sh
    args:
      - -c
      - "sudo ln -sf /logs/log /dev/log && \
            /venv/bin/python /app/tmcprototype/DishMaster/DishMaster/DishMaster.py 01"
    env:
    - name: TANGO_HOST
      value: databaseds-{{ template "integration-tmc-webui.name" . }}-{{ .Release.Name }}:10000

  - name: dishmaster2
    image: "{{ .Values.tmcprototype.image.registry }}/{{ .Values.tmcprototype.image.image }}:{{ .Values.tmcprototype.image.tag }}"
    imagePullPolicy: {{ .Values.tmcprototype.image.pullPolicy }}
    volumeMounts:
    - name: logs
      mountPath: /logs
    command:
      - sh
    args:
      - -c
      - "sudo ln -sf /logs/log /dev/log && \
            /venv/bin/python /app/tmcprototype/DishMaster/DishMaster/DishMaster.py 02"
    env:
    - name: TANGO_HOST
      value: databaseds-{{ template "integration-tmc-webui.name" . }}-{{ .Release.Name }}:10000

  - name: dishmaster3
    image: "{{ .Values.tmcprototype.image.registry }}/{{ .Values.tmcprototype.image.image }}:{{ .Values.tmcprototype.image.tag }}"
    imagePullPolicy: {{ .Values.tmcprototype.image.pullPolicy }}
    volumeMounts:
    - name: logs
      mountPath: /logs
    command:
      - sh
    args:
      - -c
      - "sudo ln -sf /logs/log /dev/log && \
            /venv/bin/python /app/tmcprototype/DishMaster/DishMaster/DishMaster.py 03"
    env:
    - name: TANGO_HOST
      value: databaseds-{{ template "integration-tmc-webui.name" . }}-{{ .Release.Name }}:10000

  - name: dishmaster4
    image: "{{ .Values.tmcprototype.image.registry }}/{{ .Values.tmcprototype.image.image }}:{{ .Values.tmcprototype.image.tag }}"
    imagePullPolicy: {{ .Values.tmcprototype.image.pullPolicy }}
    volumeMounts:
    - name: logs
      mountPath: /logs
    command:
      - sh
    args:
      - -c
      - "sudo ln -sf /logs/log /dev/log && \
            /venv/bin/python /app/tmcprototype/DishMaster/DishMaster/DishMaster.py 04"
    env:
    - name: TANGO_HOST
      value: databaseds-{{ template "integration-tmc-webui.name" . }}-{{ .Release.Name }}:10000

  - name: dishleafnode1
    image: "{{ .Values.tmcprototype.image.registry }}/{{ .Values.tmcprototype.image.image }}:{{ .Values.tmcprototype.image.tag }}"
    imagePullPolicy: {{ .Values.tmcprototype.image.pullPolicy }}
    volumeMounts:
    - name: logs
      mountPath: /logs
    command:
      - sh
    args:
      - -c
      - "sudo ln -sf /logs/log /dev/log && \
             /venv/bin/python /app/tmcprototype/DishLeafNode/DishLeafNode/DishLeafNode.py 01"
    env:
    - name: TANGO_HOST
      value: databaseds-{{ template "integration-tmc-webui.name" . }}-{{ .Release.Name }}:10000

  - name: dishleafnode2
    image: "{{ .Values.tmcprototype.image.registry }}/{{ .Values.tmcprototype.image.image }}:{{ .Values.tmcprototype.image.tag }}"
    imagePullPolicy: {{ .Values.tmcprototype.image.pullPolicy }}
    volumeMounts:
    - name: logs
      mountPath: /logs
    command:
      - sh
    args:
      - -c
      - "sudo ln -sf /logs/log /dev/log && \
             /venv/bin/python /app/tmcprototype/DishLeafNode/DishLeafNode/DishLeafNode.py 02"
    env:
    - name: TANGO_HOST
      value: databaseds-{{ template "integration-tmc-webui.name" . }}-{{ .Release.Name }}:10000

  - name: dishleafnode3
    image: "{{ .Values.tmcprototype.image.registry }}/{{ .Values.tmcprototype.image.image }}:{{ .Values.tmcprototype.image.tag }}"
    imagePullPolicy: {{ .Values.tmcprototype.image.pullPolicy }}
    volumeMounts:
    - name: logs
      mountPath: /logs
    command:
      - sh
    args:
      - -c
      - "sudo ln -sf /logs/log /dev/log && \
             /venv/bin/python /app/tmcprototype/DishLeafNode/DishLeafNode/DishLeafNode.py 03"
    env:
    - name: TANGO_HOST
      value: databaseds-{{ template "integration-tmc-webui.name" . }}-{{ .Release.Name }}:10000

  - name: dishleafnode4
    image: "{{ .Values.tmcprototype.image.registry }}/{{ .Values.tmcprototype.image.image }}:{{ .Values.tmcprototype.image.tag }}"
    imagePullPolicy: {{ .Values.tmcprototype.image.pullPolicy }}
    volumeMounts:
    - name: logs
      mountPath: /logs
    command:
      - sh
    args:
      - -c
      - "sudo ln -sf /logs/log /dev/log && \
             /venv/bin/python /app/tmcprototype/DishLeafNode/DishLeafNode/DishLeafNode.py 04"
    env:
    - name: TANGO_HOST
      value: databaseds-{{ template "integration-tmc-webui.name" . }}-{{ .Release.Name }}:10000

  - name: subarraynode1
    image: "{{ .Values.tmcprototype.image.registry }}/{{ .Values.tmcprototype.image.image }}:{{ .Values.tmcprototype.image.tag }}"
    imagePullPolicy: {{ .Values.tmcprototype.image.pullPolicy }}
    volumeMounts:
    - name: logs
      mountPath: /logs
    command:
      - sh
    args:
      - -c
      - "sudo ln -sf /logs/log /dev/log && \
             /venv/bin/python /app/tmcprototype/SubarrayNode/SubarrayNode/SubarrayNode.py sa1"
    env:
    - name: TANGO_HOST
      value: databaseds-{{ template "integration-tmc-webui.name" . }}-{{ .Release.Name }}:10000

  - name: subarraynode2
    image: "{{ .Values.tmcprototype.image.registry }}/{{ .Values.tmcprototype.image.image }}:{{ .Values.tmcprototype.image.tag }}"
    imagePullPolicy: {{ .Values.tmcprototype.image.pullPolicy }}
    volumeMounts:
    - name: logs
      mountPath: /logs
    command:
      - sh
    args:
      - -c
      - "sudo ln -sf /logs/log /dev/log && \
             /venv/bin/python /app/tmcprototype/SubarrayNode/SubarrayNode/SubarrayNode.py sa2"
    env:
    - name: TANGO_HOST
      value: databaseds-{{ template "integration-tmc-webui.name" . }}-{{ .Release.Name }}:10000

  - name: centralnode
    image: "{{ .Values.tmcprototype.image.registry }}/{{ .Values.tmcprototype.image.image }}:{{ .Values.tmcprototype.image.tag }}"
    imagePullPolicy: {{ .Values.tmcprototype.image.pullPolicy }}
    volumeMounts:
    - name: logs
      mountPath: /logs
    command:
      - sh
    args:
      - -c
      - "sudo ln -sf /logs/log /dev/log && \
             /venv/bin/python /app/tmcprototype/CentralNode/CentralNode/CentralNode.py 01"
    env:
    - name: TANGO_HOST
      value: databaseds-{{ template "integration-tmc-webui.name" . }}-{{ .Release.Name }}:10000


{{- with .Values.tmcprototype.env }}
{{ toYaml . | indent 4 }}
{{- end }}
  restartPolicy: Always
{{- with .Values.nodeSelector }}
  nodeSelector:
{{ toYaml . | indent 4 }}
{{- end }}
{{- with .Values.affinity }}
  affinity:
{{ toYaml . | indent 4 }}
{{- end }}
{{- with .Values.tolerations }}
  tolerations:
{{ toYaml . | indent 4 }}
{{- end }}

{{ end }}