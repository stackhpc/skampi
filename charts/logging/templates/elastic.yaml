{{ if .Values.elastic.enabled }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: elastic-{{ template "logging.name" . }}-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      component: elasticsearch
  template:
    metadata:
      labels:
        component: elasticsearch
    spec:

      {{ if .Values.elastic.use_pv }}
      initContainers:
      - name: setdatadirpermissions
        image: "{{ .Values.elastic.image.registry }}/{{ .Values.elastic.image.image }}:{{ .Values.elastic.image.tag }}"
        imagePullPolicy: {{ .Values.elastic.image.pullPolicy }}
        command:
          - sh
          - -c
          - 'chown 1000:1000 /usr/share/elasticsearch/data'
        volumeMounts:
        - name: elastic-data
          mountPath: /usr/share/elasticsearch/data
      {{ end }}

      containers:
      - name: elastic-{{ template "logging.name" . }}-{{ .Release.Name }}
        image: "{{ .Values.elastic.image.registry }}/{{ .Values.elastic.image.image }}:{{ .Values.elastic.image.tag }}"
        imagePullPolicy: {{ .Values.elastic.image.pullPolicy }}
        env:
        - name: path.data
          value: /usr/share/elasticsearch/data
        - name: path.logs
          value: /usr/share/elasticsearch/data
        - name: discovery.type
          value: single-node
        ports:
        - containerPort: 9200
          name: http
          protocol: TCP

        {{ if .Values.elastic.use_pv }}
        volumeMounts:
        - name: elastic-data
          mountPath: /usr/share/elasticsearch/data
        {{ end }}

        readinessProbe:
          httpGet:
            path: /_cluster/health
            port: 9200
          initialDelaySeconds: 15
          periodSeconds: 5

      {{ if .Values.elastic.use_pv }}
      volumes:
      - name: elastic-data
        persistentVolumeClaim:
          claimName: elastic-{{ template "logging.name" . }}-{{ .Release.Name }}
      {{ end }}

---

apiVersion: v1
kind: Service
metadata:
  name: elastic-{{ template "logging.name" . }}-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    service: elasticsearch
spec:
  type: NodePort
  selector:
    component: elasticsearch
  ports:
  - port: 9200
    targetPort: 9200

---
apiVersion: batch/v1
kind: Job
metadata:
  name: elastic-configurator-{{ template "logging.name" . }}-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  ttlSecondsAfterFinished: 100
  template:
    spec:
      containers:
      - name: elastic-configurator
        image: alpine:latest
        env:
          - name: ELASTIC_HOST
            value: http://elastic-{{ template "logging.name" . }}-{{ .Release.Name }}:9200
        command: ["/bin/sh"]
        args:
          - "-c"
          - >
            apk add curl &&
            curl -XPUT --retry-connrefused --connect-timeout 5 --retry 999  --retry-delay 1 "${ELASTIC_HOST}"/_ingest/pipeline/ska_log_parsing_pipeline -H "kbn-xsrf: true" -H "Content-Type: application/json" -d @/tmp/ska_log_parsing_pipeline.json &&
            curl -XPUT --retry-connrefused --connect-timeout 5 --retry 999  --retry-delay 1 "${ELASTIC_HOST}"/_ilm/policy/ska_ilm_policy -H "kbn-xsrf: true" -H "Content-Type: application/json" -d @/tmp/ska_ilm_policy.json &&
            curl -XPUT --retry-connrefused --connect-timeout 5 --retry 999  --retry-delay 1 "${ELASTIC_HOST}"/_template/ska_index_template -H "kbn-xsrf: true" -H "Content-Type: application/json" -d @/tmp/ska_index_template.json
        volumeMounts:
          - name: elastic-config
            mountPath: /tmp/
            readOnly: true
      volumes:
        - name: elastic-config
          configMap:
            name: elastic-config-map-{{ template "logging.name" . }}-{{ .Release.Name }}
      restartPolicy: "Never"

{{ end }}
