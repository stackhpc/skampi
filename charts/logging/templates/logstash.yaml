{{ if .Values.logstash.enabled }}

apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-configmap-{{ template "logging.name" . }}-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    service: logstash
data:
  logstash.yml: |
    http.host: "0.0.0.0"
    path.config: /usr/share/logstash/pipeline
  logstash.conf: 
{{ (tpl (.Files.Glob "configs/logstash.conf").AsConfig .) | indent 2 }}

---
kind: Service
apiVersion: v1
metadata:
  name: logstash-{{ template "logging.name" . }}-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    service: logstash
spec:
  selector:
    app: logstash
  type: NodePort
  ports:
  - protocol: TCP
    port: 5044
    targetPort: 5044
    nodePort: {{ .Values.logstash.nodePort }} # TODO a strategy to dynamically choose a port to avoid conflicts

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash-deployment-{{ template "logging.name" . }}-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    service: logstash
spec:
  selector:
    matchLabels:
      app: logstash
  replicas: 1
  template:
    metadata:
      labels:
        app: logstash
    spec:
      containers:
      - name: logstash-{{ template "logging.name" . }}-{{ .Release.Name }}
        image: "{{ .Values.logstash.image.registry }}/{{ .Values.logstash.image.image }}:{{ .Values.logstash.image.tag }}"
        command: ["/bin/bash"]
        args: ["-c", "bin/logstash-plugin install logstash-input-syslog logstash-output-elasticsearch logstash-filter-grok logstash-filter-json  ; /usr/local/bin/docker-entrypoint"]
        ports:
        - containerPort: 5044
        volumeMounts:
          - name: logstash-config-volume
            mountPath: /usr/share/logstash/config
          - name: logstash-pipeline-volume
            mountPath: /usr/share/logstash/pipeline
      volumes:
      - name: logstash-config-volume
        configMap:
          name: logstash-configmap-{{ template "logging.name" . }}-{{ .Release.Name }}
          items:
            - key: logstash.yml
              path: logstash.yml
      - name: logstash-pipeline-volume
        configMap:
          name: logstash-configmap-{{ template "logging.name" . }}-{{ .Release.Name }}
          items:
            - key: logstash.conf
              path: logstash.conf
{{ end }}
